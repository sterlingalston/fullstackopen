{"version":3,"sources":["components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Persons","thePeople","delHandle","map","p","name","key","phone","onClick","Notification","message","theclass","className","baseUrl","axios","get","then","response","data","newObject","request","post","console","log","id","put","delete","Filter","theFilter","theHandler","value","onChange","PersonForm","submitHandler","nameValue","phoneValue","nameHandle","phoneHandle","onSubmit","type","App","useState","persons","setPersons","hook","personService","initialPersons","newName","setNewName","filter","setFilter","errorMessage","setErrorMessage","useEffect","personsToShow","length","substr","toUpperCase","class","event","target","preventDefault","window","confirm","pid_to_update","find","fndPerson","changedPerson","updatedPersons","setTimeout","returnedPersons","concat","namer","parentNode","getAttribute","pid_to_delete","updatePersons","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11fe0ee9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\n  const Persons = ({thePeople, delHandle}) =>{\r\n  \t\r\n  \treturn (<div><ul>{thePeople.map(p => <li name={p.name} key={p.name}> {p.name} {p.phone} <button onClick={delHandle}>delete</button></li>)\r\n  \t\t}</ul></div>)\r\n\r\n  }\r\n\r\n  export default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message, theclass }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={theclass}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl_2 = 'http://localhost:3001/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl_2, newObject)\r\n  console.log(baseUrl)\r\n  console.log(newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleter = (id, newObject) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)//, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { \r\n  getAll, \r\n  create, \r\n  update,\r\n  deleter \r\n} //same as above","import React, { useState, useEffect } from 'react'\r\nimport Persons from './/components//Persons'\r\nimport Notification from './components/Notification'\r\n\r\nimport axios from 'axios'\r\n\r\nimport personService from './/services//persons'\r\n\r\n\r\n\r\nconst Filter = ({theFilter,theHandler}) =>{\r\n\treturn(<div><table><td>filter shown with</td><td><input value={theFilter} onChange={theHandler}/></td></table></div>)\r\n}\r\n\r\nconst PersonForm = ({submitHandler,nameValue,phoneValue,nameHandle,phoneHandle}) => {\r\n\treturn(\t<form onSubmit = {submitHandler}>\r\n\r\n\t\t\r\n\t\t        <div>\r\n        <table>\r\n          <tr><td>name:</td> <td><input id=\"theinput\" value={nameValue} onChange = {nameHandle}/></td></tr>\r\n          <tr><td>number:</td><td> <input value={phoneValue} onChange = {phoneHandle}/></td></tr>\r\n      </table>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n    \r\n    </form>)\r\n}\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([\r\n    { name: 'Arto Hellas', phone:'040-1234567' }\r\n  ])\r\n\r\nconst hook = () => {\r\n    personService\r\n      .getAll()\r\n        .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n        \r\n  }\r\n\r\n const [ newName, setNewName ] = useState({name: '', phone: ''})\r\n  const [filter, setFilter] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState({})\r\n\r\n   useEffect(hook, [])\r\n\r\n  \r\n  \r\n \r\n\r\n  const handleNameChange = (event) =>{\r\n  \t\tconsole.log(event.target.value)\r\n  \t\tsetNewName({name: event.target.value, phone: newName.phone})\r\n  }\r\n\r\n  const handlePhoneChange = (event) =>{\r\n  \t\tconsole.log(event.target.value)\r\n  \t\tsetNewName({name: newName.name, phone: event.target.value})\r\n  }\r\n\r\n\tconst handleFilterChange = (event) =>{\r\n  \t\tconsole.log( \"the filter: \",filter)\r\n  \t\tsetFilter(event.target.value)\r\n  }\r\n\r\n  const handlePersonDelete = (event) =>{\r\n  \tlet namer = event.target.parentNode.getAttribute('name')\r\n  \tlet pid_to_delete = persons.find(p => p.name == namer ).id\r\n  \t\r\n  \tif(window.confirm(\"Delete \"+ namer + \"?\"))\r\n  \t{\r\n\r\n\t  \tconsole.log('deleted',namer, pid_to_delete)\r\n\t  \tpersonService.deleter(pid_to_delete).then(\r\n        updatePersons => {\r\n          hook()\r\n        }\r\n\r\n        ).catch(\r\n          error => {\r\n          setErrorMessage( {message: `Information of '${namer}' was already removed from server`, class: \"error\"})\r\n        })\r\n        \r\n  \t}\r\n  }\r\n\r\n  const addName = (event) =>{\r\n  \t\tevent.preventDefault()\r\n  \t\t\r\n  \t\tif(persons.filter(p => p.name == newName.name).length)\r\n\r\n  \t\t\t{\r\n  \t\t\t\t/*\r\n  \t\t\t\talert(`${newName.name} is already added to phonebook`)\r\n  \t\t\t\tsetNewName({name: '', phone: ''})*/\r\n\r\n  \t\t\t\tif(window.confirm(`${newName.name} is already added to phonebook, replace the old number with the new one?`)){\r\n  \t\t\t\t\tlet pid_to_update = persons.find(p => p.name == newName.name ).id\t\r\n  \t\t\t\t\tlet fndPerson   = persons.find(p => p.id == pid_to_update )\r\n  \t\t\t\t\tlet changedPerson = {...fndPerson,phone: newName.phone}\r\n  \t\t\t\t\t\r\n            personService.update(pid_to_update,changedPerson).then(updatedPersons => {\r\n  \t\t\t\t\t\thook()\r\n  \t\t\t\t\t\tsetNewName({name: '', phone: ''})\r\n              setErrorMessage( {message: `Information of '${newName.name}' has been updated.`, class:\"success\"})\r\n              setTimeout(() => {setErrorMessage({})}, 5000)\r\n  \t\t\t\t\t})\r\n\r\n\r\n  \t\t\t\t}\r\n\r\n  \t\t\t}\r\n  \t\telse\r\n  \t\t\t{\r\n  \t\r\n\r\n\t\t\t\t    personService.create(newName)\r\n        \t\t\t.then(returnedPersons => {\r\n        \t\t\tsetPersons(persons.concat(returnedPersons))\r\n              setErrorMessage( {message: `Added ${newName.name}`, class:\"success\"})\r\n              setTimeout(() => {setErrorMessage({})}, 5000)\r\n\t\t\t\t      })   \r\n\r\n\r\n  \t\t\t\t\r\n  \t\t\t}\r\n  \t\t\t\r\n  \t\t\r\n  }\r\n\r\nconst personsToShow = filter.length > 0 ? persons.filter( p => p.name.substr(0,filter.length).toUpperCase() == filter.toUpperCase()) : persons\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={errorMessage.message} theclass={errorMessage.class}/>\r\n\r\n      <Filter theFilter ={filter} theHandler = {handleFilterChange}/>\r\n    \r\n      <h3>add a new</h3>\r\n\r\n      <PersonForm submitHandler= {addName} nameValue = {newName.name} nameHandle = {handleNameChange} phoneValue = {newName.phone} phoneHandle = {handlePhoneChange} />\r\n\r\n      <h3>Numbers</h3>\r\n      \r\n      <div><Persons thePeople = {personsToShow} delHandle = {handlePersonDelete}/></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport Course from './/components//Course'\nimport App from './/App'\n\nimport './index.css'\n\n\n\nReactDOM.render(\n  <App  />,\n  document.getElementById('root')\n)"],"sourceRoot":""}